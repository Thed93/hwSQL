-- Доведите количество записей в таблице до 5.
INSERT INTO employee (
first_name, last_name, gender, age)
VALUES ('Ivan', 'Ivanov', 'male', 23);

INSERT INTO employee (
first_name, last_name, gender, age)
VALUES ('Egor', 'Egorov', 'male', 53);

INSERT INTO employee (
first_name, last_name, gender, age)
VALUES ('Anton', 'Antonov', 'male', 32);

-- Получите информацию об именах и фамилиях по всем сотрудникам.
-- Колонки должны называться «Имя» и «Фамилия».
SELECT first_name AS Имя,
last_name AS Фамилия
FROM employee;

-- Получите всю информацию о сотрудниках,
-- которые младше 30 или старше 50 лет.
SELECT * FROM employee
WHERE age < 30 OR age > 50;

-- Получите всю информацию о сотрудниках, которым от 30 до 50 лет.
SELECT * FROM employee
WHERE age > 30 AND age < 50;

-- Выведите полный список сотрудников,
-- которые отсортированы по фамилиям в обратном порядке.
SELECT * FROM employee
ORDER BY last_name DESC;


-- Выведите сотрудников, имена которых длиннее 4 символов.
SELECT * FROM employee
WHERE first_name LIKE '%____%';

-- Измените имена у двух сотрудников так, чтобы на 5 сотрудников
-- было только 3 разных имени, то есть чтобы получились
-- две пары тезок и один сотрудник с уникальным именем.
UPDATE employee SET first_name = 'Ivan', last_name = 'Ivanov', gender = 'male', age = 23 WHERE id = 2;
UPDATE employee SET first_name = 'Olga', last_name = 'Vanina', gender = 'female', age = 29 WHERE id = 5;

-- Посчитайте суммарный возраст для каждого имени.
-- Выведите в двух столбцах «имя» и «суммарный возраст».
SELECT first_name AS имя,
SUM(age) AS суммарный_возрост
FROM employee GROUP BY first_name;

-- Выведите имя и самый юный возраст, соответствующий имени.
SELECT first_name, age FROM employee
WHERE age = (
SELECT MIN(age)
FROM employee
);

-- Выведите имя и максимальный возраст только для неуникальных имен.
-- Результат отсортируйте по возрасту в порядке возрастания.
SELECT first_name, MAX(age) FROM employee
GROUP BY first_name
HAVING COUNT(first_name) > 1;
